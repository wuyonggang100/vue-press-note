(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{400:function(s,e,a){"use strict";a.r(e);var n=a(54),t=Object(n.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h4",{attrs:{id:"babel-是啥"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#babel-是啥"}},[s._v("#")]),s._v(" babel 是啥")]),s._v(" "),a("blockquote",[a("p",[s._v("Babel 的作者是 FaceBook 的工程师 Sebastian McKenzie。他在 2014 年发布了一款 JavaScript 的编译器 "),a("code",[s._v("6to5")]),s._v("。 ES6 正式发布后，被命名为 ES2015，6to5 被改为 Babel 。Babel 是巴比伦文化里的通天塔。")])]),s._v(" "),a("blockquote",[a("ul",[a("li",[s._v("Babel 是一个编译器（源代码=>输出代码）。像许多其他编译器一样，它分三个阶段运行：解析，转换和生成新代码。")]),s._v(" "),a("li",[s._v("Babel 是一个工具链，主要用于在旧的浏览器或环境中将 ECMAScript 2015+ 代码转换为向后兼容版本的 JavaScript 代码。以下是Babel 可以为你做的主要事情：\n"),a("ul",[a("li",[s._v("转换语法")]),s._v(" "),a("li",[s._v("Polyfill 实现目标环境中缺少的功能 （通过 "),a("a",{attrs:{href:"https://babel.docschina.org/docs/en/7.0.0/babel-polyfill",target:"_blank",rel:"noopener noreferrer"}},[s._v("@babel/polyfill"),a("OutboundLink")],1),s._v("）")]),s._v(" "),a("li",[s._v("代码转换 (codemods)")])])]),s._v(" "),a("li",[s._v("对于浏览器已经支持的部分，可以不转换。")])])]),s._v(" "),a("h4",{attrs:{id:"babel-的工作流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#babel-的工作流程"}},[s._v("#")]),s._v(" babel 的工作流程")]),s._v(" "),a("blockquote",[a("p",[s._v("主要分为三个阶段, 每个阶段各使用一个包。")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("读取代码")]),s._v("。通过 @babel/parser 这个包将其转换成 Original AST （转换前的抽象语法树 ）。")]),s._v(" "),a("li",[a("strong",[s._v("AST语法树转换")]),s._v("。通过 @babel/traverse 这个包去遍历 AST，在遍历的过程中，就可以通过各种 "),a("strong",[s._v("转换插件")]),s._v(" 将代码进行转换。最后就会得到 Transformed AST（转换后的抽象语法树 ）")]),s._v(" "),a("li",[a("strong",[s._v("将AST 转成 js代码")]),s._v("。将 Transformed AST 通过 @babel/generator 这个包再把 AST 转换成 javascript 代码。")])])]),s._v(" "),a("h4",{attrs:{id:"babel-的五种使用方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#babel-的五种使用方式"}},[s._v("#")]),s._v(" babel 的五种使用方式")]),s._v(" "),a("blockquote",[a("ul",[a("li",[a("p",[s._v("第一种，不结合其它任何工具，直接使用 Babel 的  cli 工具命令行的方式直接转换。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 转码结果写入一个文件,--out-file 可以简写成 -o\nbabel example.js --out-file compiled.js\n# 整个目录转码，--out-dir 可以简写成 -d\nbabel src --out-dir lib\n# -s 参数生成source map 文件\nbabel src -d lib -s\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])])])]),s._v(" "),a("blockquote",[a("p",[s._v("与其他工具有相同的配置形式 ，都有三种方式。xxx 此时为 babel 或 eslit 等。 Babel 将自动搜索 这些文件。.babelrc 与 package.json 可以单独或同时使用。")]),s._v(" "),a("ol",[a("li",[s._v("项目根目录下 加 .xxxrc 文件，")]),s._v(" "),a("li",[s._v("项目根目录下 .xxxrc.js")]),s._v(" "),a("li",[s._v("项目根目录下 xxx.config.js")]),s._v(" "),a("li",[s._v("在 package.json 中加 xxx 字段，然后在此字段下加配置。")])]),s._v(" "),a("p",[s._v("如 ESLint ("),a("code",[s._v(".eslintrc")]),s._v("), Prettier ("),a("code",[s._v(".prettierrc")]),s._v(")，Postcss， .browserslistrc")]),s._v(" "),a("p",[s._v("babel 的配置文件可以为 .babelrc.json、babel.config.json、.babelrc.js、babel.config.js。")])]),s._v(" "),a("h5",{attrs:{id:"_1-babelrc-方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-babelrc-方式"}},[s._v("#")]),s._v(" 1.  .babelrc 方式")]),s._v(" "),a("blockquote",[a("p",[s._v("在项目根目录下（与package.json同级）增加 .babelrc 文件。里面是一份 json 数据，不同的是可以写注释。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("{\n\tpresets:[...],\n\tplugins:[...]\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h5",{attrs:{id:"_2-babel-config-js-方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-babel-config-js-方式"}},[s._v("#")]),s._v(" 2. babel.config.js 方式")]),s._v(" "),a("blockquote",[a("p",[s._v("在项目根目录下（与package.json同级）增加 .babelrc 文件。然后在里面配置 如下:")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("module.exports = {\n\tpresets:[...],\n\tplugins:[...]\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h5",{attrs:{id:"_3-package-json-中加-babel-字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-package-json-中加-babel-字段"}},[s._v("#")]),s._v(" 3.package.json 中加 babel 字段")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('{\n  "name": "my-package",\n  "version": "1.0.0",\n  "babel": {\n    "presets": [ ... ],\n    "plugins": [ ... ],\n  }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h6",{attrs:{id:"_4-babel-的第四种使用方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-babel-的第四种使用方式"}},[s._v("#")]),s._v(" 4. babel 的第四种使用方式")]),s._v(" "),a("blockquote",[a("p",[s._v("在 webpack 中 rules 的 loader 的options中使用")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("{\n  test:/\\.js$/,\n  use:{\n  \tloader:'babel-loader',\n  \toptions:{\n  \t\tpresets:[...],\n  \t\tplugins:[...]\n  \t}\n  }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h4",{attrs:{id:"从-babel-5-x-升级到-babel-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#从-babel-5-x-升级到-babel-6"}},[s._v("#")]),s._v(" 从 Babel 5.x 升级到 Babel 6")]),s._v(" "),a("p",[s._v("Babel 6 的核心是"),a("a",{attrs:{href:"https://babel.docschina.org/docs/en/7.0.0/plugins",target:"_blank",rel:"noopener noreferrer"}},[s._v("插件"),a("OutboundLink")],1),s._v("。你需要什么插件完全取决于你指定的配置，但只需在"),a("a",{attrs:{href:"https://babel.docschina.org/docs/en/7.0.0/config-files",target:"_blank",rel:"noopener noreferrer"}},[s._v("配置文件"),a("OutboundLink")],1),s._v("中添加以下内容，将得到所有在 Babel 5 中相同的转换：")]),s._v(" "),a("blockquote",[a("p",[s._v("安装 npm install babel-preset-env babel-preset-react babel-preset-stage-2 --save-dev")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('{ "presets": ["env", "react", "stage-2"] }\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"presets"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#presets"}},[s._v("#")]),s._v(" presets")]),s._v(" "),a("blockquote",[a("p",[s._v("presets字段设定转码规则，官方提供以下的规则集，可以根据需要安装。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# ES2015 转码规则\n$ npm install --save-dev babel-preset-es2015\n\n# react 转码规则\n$ npm install --save-dev babel-preset-react\n\n# ES7不同阶段语法提案的转码规则（共有4个阶段），选装一个\n$ npm install --save-dev babel-preset-stage-0\n$ npm install --save-dev babel-preset-stage-1\n$ npm install --save-dev babel-preset-stage-2\n$ npm install --save-dev babel-preset-stage-3\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("最后得到如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('{\n\t"presets":[\n\t\t"es2015",\n\t\t"react",\n\t\t"stage-2"\n\t],\n\t"plugins":[]\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("babel-plugin-import 是 ant-design 团队出的，可以说其他绝大部分按需引入的插件都是在此基础上魔改的。")]),s._v(" "),a("p",[s._v("babel-plugin-component 是饿了么团队在前者的基础上做了一些改动。主要是因为 fork 的时间太早（2016 年 4 月），饿了么修复了一些早期 bug 却并没有 PR 到 ant-design 的仓库里去，但后来 ant-design 也有修复；再就是后来 ant-design 的有一些配置项的变动、而饿了么团队却没有跟进合并。所以二者还是有一些差异的。")])])}),[],!1,null,null,null);e.default=t.exports}}]);