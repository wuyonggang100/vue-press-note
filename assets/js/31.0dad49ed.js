(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{417:function(v,_,e){"use strict";e.r(_);var t=e(54),o=Object(t.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"javascript标准参考教材-alpha-笔记"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#javascript标准参考教材-alpha-笔记"}},[v._v("#")]),v._v(" "),e("a",{attrs:{href:"https://www.cnblogs.com/colima/p/5714754.html",target:"_blank",rel:"noopener noreferrer"}},[v._v("JavaScript标准参考教材（alpha）--笔记"),e("OutboundLink")],1)]),v._v(" "),e("p",[v._v("一、导论")]),v._v(" "),e("p",[v._v("二、基本语法")]),v._v(" "),e("p",[v._v("​    1、严格来说var a=1与a=1效果不太一样，delete命令无法删除前者。")]),v._v(" "),e("p",[v._v("​        JavaScirpt是一种动态类型语言，也就是说，变量的类型没有限制，可以赋予各种类型的值。")]),v._v(" "),e("p",[v._v("​        JavaScript引擎的工作方式是，先解析代码，获取所有被声明的变量，然后再一行一行地运行。中文是合法的标识符，可以用作变量名。")]),v._v(" "),e("p",[v._v("​        switch语句后面的表达式与case语句后面的表示式，在比较运行结果时，采用的是严格相等运算符（"),e("code",[v._v("===")]),v._v("）。swidth结构不利于代码重用，往往可以用对象形式重写。")]),v._v(" "),e("p",[v._v("​         do...while语句中，while后的分号不能省略。")]),v._v(" "),e("p",[v._v("​         typeof(null)=='object'，typeof(undefined)=='undefined'，null==undefined，null转数值是0，undefined转数值是NaN。\n​    2、JavaScript内部，所有数字都是以64位浮点数形式储存，")]),v._v(" "),e("p",[v._v("​         +0===-0，唯一有区别的场合是，"),e("code",[v._v("+0")]),v._v("或"),e("code",[v._v("-0")]),v._v("当作分母，返回的值是不相等的，0/0返回NaN，NaN类型number，NaN===NaN为false。isFinite函数返回一个布尔值，检查某个值是不是正常数值，而不是Infinite。")]),v._v(" "),e("p",[v._v("​    3、Base64是一种编码方法，可以将任意字符转成可打印字符。使用这种编码方法，主要不是为了加密，而是为了不出现特殊字符，简化程序的处理。btoa()：字符串或二进制值转为Base64编码，atob()：Base64编码转为原来的编码。要将非ASCII码字符转为Base64编码，必须中间插入一个转码环节encodeURIComponent(str)，再使用这两个方法。")]),v._v(" "),e("p",[v._v("​    4、对象中键名不符合标识名的条件，则必须加上引号。JavaScript的保留字可以不加引号当作键名。")]),v._v(" "),e("p",[v._v("​        如果不同的变量名指向同一个对象，那么它们都是这个对象的引用，也就是说指向同一个内存地址。修改其中一个变量，会影响到其他所有变量。但是，这种引用只局限于对象，对于原始类型的数据则是传值引用，也就是说，都是值的拷贝。")]),v._v(" "),e("p",[v._v("​        检查变量是否声明：if('a' in window){}else{}。")]),v._v(" "),e("p",[v._v("​        查看所有属性：Object.keys(o)。")]),v._v(" "),e("p",[v._v("​       delete命令只能删除对象本身的属性，无法删除继承的属性，不能删除"),e("code",[v._v("var")]),v._v("命令声明的变量，只能用来删除属性。")]),v._v(" "),e("p",[v._v("​       with的作用是操作同一个对象的多个属性时，提供一些书写的方便。")]),v._v(" "),e("p",[v._v("​    5、任何类型的数据，都可以放入数组。将数组清空的一个有效方法，就是将"),e("code",[v._v("length")]),v._v("属性设为0。")]),v._v(" "),e("p",[v._v("​        数组的slice方法将类似数组的对象，变成真正的数组：Array.prototype.slice.call(arrayLike)。")]),v._v(" "),e("p",[v._v("​        数组的某个位置是空位，与某个位置是undefined，是不一样的。如果是空位，使用数组的forEach方法、for...in结构、以及Object.keys方法进行遍历，空位都会被跳过。")]),v._v(" "),e("p",[v._v("​    6、JavaScript引擎将函数名视同变量名，所以采用function命令声明函数时，整个函数会像变量声明一样，被提升到代码头部。如果同时采用"),e("code",[v._v("function")]),v._v("命令和赋值语句声明同一个函数，最后总是采用赋值语句的定义。")]),v._v(" "),e("p",[v._v("​         对于var命令来说，局部变量只能在函数内部声明，在其他区块中声明，一律都是全局变量。")]),v._v(" "),e("p",[v._v("​         如果函数"),e("code",[v._v("A")]),v._v("调用函数"),e("code",[v._v("B")]),v._v("，函数"),e("code",[v._v("B")]),v._v("不会引用函数"),e("code",[v._v("A")]),v._v("的内部变量。函数体内部声明的函数，作用域绑定函数体内部。")]),v._v(" "),e("p",[v._v("​         函数参数如果是原始类型按值传递，如果是复合类型按地址传递，如果函数内部修改的，不是参数对象的某个属性，而是替换掉整个参数，这时不会影响到原始值。")]),v._v(" "),e("p",[v._v("​        闭包就是函数能够读取其他函数内部变量的函数。闭包作用：读取函数内部变量，让这些变量始终保存在内存中，封装对象的私有属性和私有方法。")]),v._v(" "),e("p",[v._v("​    7、否运算（~）")]),v._v(" "),e("p",[v._v("​    8、Number:调用对象自身的"),e("code",[v._v("valueOf")]),v._v("方法。如果返回原始类型的值，则直接对该值使用"),e("code",[v._v("Number")]),v._v("函数，不再进行后续步骤。如果"),e("code",[v._v("valueOf")]),v._v("方法返回的还是对象，则改为调用对象自身的"),e("code",[v._v("toString")]),v._v("方法。如果返回原始类型的值，则对该值使用"),e("code",[v._v("Number")]),v._v("函数，不再进行后续步骤。如果"),e("code",[v._v("toString")]),v._v("方法返回的是对象，就报错。")]),v._v(" "),e("p",[v._v("​        String:先调用对象自身的"),e("code",[v._v("toString")]),v._v("方法。如果返回原始类型的值，则对该值使用"),e("code",[v._v("String")]),v._v("函数，不再进行以下步骤。如果"),e("code",[v._v("toString")]),v._v("方法返回的是对象，再调用"),e("code",[v._v("valueOf")]),v._v("方法。如果返回原始类型的值，则对该值使用"),e("code",[v._v("String")]),v._v("函数，不再进行以下步骤。如果"),e("code",[v._v("valueOf")]),v._v("方法返回的是对象，就报错。")]),v._v(" "),e("p",[v._v("​        Boolean:undefined null -0 0或+0 NaN ''（空字符串）为false，其余为true。")]),v._v(" "),e("p",[v._v("​    9、"),e("code",[v._v("Error")]),v._v("构造函数，所有抛出的错误都是这个构造函数的实例。")]),v._v(" "),e("p",[v._v("​        原生错误类型：SyntaxEror（语法错误），ReferenceError（引用一个不存在的变量），RangeError（值超出范围），TypeError，URIError，EvalError。")]),v._v(" "),e("p",[v._v("​        如果没有发生错误，则运行"),e("code",[v._v("finally")]),v._v("代码块关闭文件；一旦发生错误，则先使用"),e("code",[v._v("catch")]),v._v("代码块处理错误，再使用"),e("code",[v._v("finally")]),v._v("代码块关闭文件。")]),v._v(" "),e("p",[v._v("​    10、避免使用全局变量。如果不得不使用，用大写字母表示变量名。")]),v._v(" "),e("p",[v._v("​        所有函数都应该在使用之前定义，函数内部的变量声明，都应该放在函数的头部。")]),v._v(" "),e("p",[v._v("​        建议使用"),e("code",[v._v("Object.create()")]),v._v("命令，替代"),e("code",[v._v("new")]),v._v("命令。")]),v._v(" "),e("p",[v._v("​        不要使用“相等”（"),e("code",[v._v("==")]),v._v("）运算符，只使用“严格相等”（"),e("code",[v._v("===")]),v._v("）运算符。")]),v._v(" "),e("p",[v._v("​        建议自增（"),e("code",[v._v("++")]),v._v("）和自减（"),e("code",[v._v("--")]),v._v("）运算符尽量使用"),e("code",[v._v("+=")]),v._v("和"),e("code",[v._v("-=")]),v._v("代替。")]),v._v(" "),e("p",[v._v("​        建议避免使用"),e("code",[v._v("switch...case")]),v._v("结构，用对象结构代替。")]),v._v(" "),e("p",[v._v("三、标准库")]),v._v(" "),e("p",[v._v("​    1、"),e("code",[v._v("Object.keys")]),v._v("方法只返回可枚举的属性，"),e("code",[v._v("Object.getOwnPropertyNames")]),v._v("方法还返回不可枚举的属性名。")]),v._v(" "),e("p",[v._v("​        "),e("code",[v._v("var type = function (o){``var s = Object.prototype.toString.call(o);``return s.match(/\\[object(.*?)\\]/)[1].toLowerCase();``};比typeof更准确。")])]),v._v(" "),e("p",[v._v("​    2、"),e("code",[v._v("concat")]),v._v("方法返回当前数组的一个浅拷贝。所谓“浅拷贝”，指的是如果数组成员包括复合类型的值（比如对象），则新数组拷贝的是该值的引用。")]),v._v(" "),e("p",[v._v("​         "),e("code",[v._v("push")]),v._v("方法还可以用于向对象添加元素，添加后的对象变成类似数组的对象，即新加入元素的键对应数组的索引，并且对象有一个"),e("code",[v._v("length")]),v._v("属性。[].push.call(a,1)。")]),v._v(" "),e("p",[v._v("​         "),e("code",[v._v("slice")]),v._v("方法的一个重要应用，是将类似数组的对象转为真正的数组。Array.prototype.slice.call({...})。")]),v._v(" "),e("p",[v._v("​         "),e("code",[v._v("map")]),v._v("方法对数组的所有成员依次调用一个函数，根据函数结果返回一个新数组。map通过call方法还可以用于字符串。")]),v._v(" "),e("p",[v._v("​    3、valueOf()返回包装对象实例对应的原始类型的值。toString()返回实例对应的字符串形式。")]),v._v(" "),e("p",[v._v("​         原始类型的值，可以自动当作对象调用，即调用各种对象的方法和参数。这时，JavaScript引擎会自动将原始类型的值转为包装对象，在使用后立刻销毁。")]),v._v(" "),e("p",[v._v("​    4、Number：toString()，toFixed()小数位数，toExponential()科学计数法，toPrecision()指定位数的有效数字。")]),v._v(" "),e("p",[v._v("​    5、String：用slice代替substring。"),e("code",[v._v("search")]),v._v("方法的用法等同于"),e("code",[v._v("match")]),v._v("，但是返回值为匹配的第一个位置。")]),v._v(" "),e("p",[v._v("​    6、Math.round(-1.5)。返回随机字符串：")]),v._v(" "),e("p",[v._v("["),e("img",{attrs:{src:"https://common.cnblogs.com/images/copycode.gif",alt:"复制代码"}}),v._v("](javascript:void(0)😉")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("1 function random_str(length) {\n2   var a = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n3   var str = '';\n4   for (var i=0; i < length; ++i) {\n5     var rand = Math.floor(Math.random() * a.length);\n6     str += a.slice(rand, rand + 1);\n7   }\n8   return str;\n9 }\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br"),e("span",{staticClass:"line-number"},[v._v("2")]),e("br"),e("span",{staticClass:"line-number"},[v._v("3")]),e("br"),e("span",{staticClass:"line-number"},[v._v("4")]),e("br"),e("span",{staticClass:"line-number"},[v._v("5")]),e("br"),e("span",{staticClass:"line-number"},[v._v("6")]),e("br"),e("span",{staticClass:"line-number"},[v._v("7")]),e("br"),e("span",{staticClass:"line-number"},[v._v("8")]),e("br"),e("span",{staticClass:"line-number"},[v._v("9")]),e("br")])]),e("p",[v._v("["),e("img",{attrs:{src:"https://common.cnblogs.com/images/copycode.gif",alt:"复制代码"}}),v._v("](javascript:void(0)😉")]),v._v(" "),e("p",[v._v("​    7、Date："),e("code",[v._v("getYear()")]),v._v("：返回距离1900的年数。"),e("code",[v._v("valueOf")]),v._v("方法返回实例对象距离1970年1月1日00:00:00 UTC对应的毫秒数，该方法等同于"),e("code",[v._v("getTime")]),v._v("方法。")]),v._v(" "),e("p",[v._v("​    8、正则："),e("code",[v._v("regex.test(string)返回布尔值")]),v._v("。regex.exec(string)返回数组，有lastIndex属性。"),e("code",[v._v("string.match(regex)不匹配返回null。search返回第一个满足条件的匹配结果在整个字符串中的位置，否则-1。")])]),v._v(" "),e("p",[v._v("​    9、JSON："),e("code",[v._v("JSON.stringify，JSON.parse方法用于将JSON字符串转化成对象``。")])]),v._v(" "),e("p",[v._v("​    10、console")]),v._v(" "),e("p",[v._v("​    11、属性描述对象")]),v._v(" "),e("p",[v._v("四、面向对象编程")]),v._v(" "),e("p",[v._v("​    1、JavaScript的对象体系是基于构造函数（constructor）和原型链（prototype）的。使用构造函数（constructor）作为对象的模板（首字母大写）。")]),v._v(" "),e("p",[e("code",[v._v("new")]),v._v("命令的作用，就是执行构造函数，返回一个实例对象。new命令总返回一个对象。")]),v._v(" "),e("p",[v._v("​        如果构造函数内部有"),e("code",[v._v("return")]),v._v("语句，而且"),e("code",[v._v("return")]),v._v("后面跟着一个对象，"),e("code",[v._v("new")]),v._v("命令会返回"),e("code",[v._v("return")]),v._v("语句指定的对象；否则，就会不管"),e("code",[v._v("return")]),v._v("语句，返回"),e("code",[v._v("this")]),v._v("对象。")]),v._v(" "),e("p",[v._v("​    2、this")]),v._v(" "),e("p",[v._v("​        在全局环境使用"),e("code",[v._v("this")]),v._v("，它指的就是顶层对象"),e("code",[v._v("window。构造函数中的this，指的是实例对象。当A对象的方法被赋予B对象，该方法中的this就从指向A对象变成了指向B对象。")])]),v._v(" "),e("p",[v._v("​    3、prototype")]),v._v(" "),e("p",[v._v("​        原型对象的作用，就是定义所有实例对象共享的属性和方法。")]),v._v(" "),e("p",[v._v("​        "),e("code",[v._v("constructor")]),v._v("属性的作用，是分辨原型对象到底属于哪个构造函数。")]),v._v(" "),e("p",[v._v("​        "),e("code",[v._v("instanceof")]),v._v("运算符用来比较一个对象是否为某个构造函数的实例。")]),v._v(" "),e("p",[v._v("​        "),e("code",[v._v("Object.getPrototypeOf")]),v._v("方法返回一个对象的原型。")]),v._v(" "),e("p",[v._v("​        "),e("code",[v._v("Object.setPrototypeOf")]),v._v("方法可以为现有对象设置原型，返回一个新对象。")]),v._v(" "),e("p",[v._v("​        对象实例的"),e("code",[v._v("isPrototypeOf")]),v._v("方法，用来判断一个对象是否是另一个对象的原型。")]),v._v(" "),e("p",[v._v("​    4、Object对象与继承")]),v._v(" "),e("p",[v._v("​    5、面向对象编程的模式")]),v._v(" "),e("p",[v._v("五、DOM（未看）")]),v._v(" "),e("p",[v._v("​    1、对于HTML文档，节点主要有以下六种类型：Document节点、DocumentType节点、Element节点、Attribute节点、Text节点和DocumentFragment节点。")]),v._v(" "),e("p",[v._v("六、浏览器环境")]),v._v(" "),e("p",[v._v("​    1、浏览器核心：渲染引擎和JavaScript引擎，")]),v._v(" "),e("p",[v._v("​        如果脚本之间没有依赖关系，就使用"),e("code",[v._v("async")]),v._v("属性，如果脚本之间有依赖关系，就使用"),e("code",[v._v("defer")]),v._v("属性。如果同时使用"),e("code",[v._v("async")]),v._v("和"),e("code",[v._v("defer")]),v._v("属性，后者不起作用，浏览器行为由"),e("code",[v._v("async")]),v._v("属性决定。")]),v._v(" "),e("p",[v._v("​        重流必然导致重绘，重绘不一定需要重流。")]),v._v(" "),e("p",[v._v("​        根据页面本身的协议来决定加载协议，这时可以采用下面的写法。"),e("code",[v._v('<script src="//example.js"><\/script>')])]),v._v(" "),e("p",[v._v("​    2、"),e("code",[v._v("window.location === document.location。")])]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("    URL编码：``encodeURI()，``encodeURIComponent()，``decodeURI()，``decodeURIComponent()。\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("​    3、"),e("code",[v._v("history.back()返回上一页（从浏览器缓存中加载）。")])]),v._v(" "),e("p",[v._v("​        URLSearchParams API用于处理URL之中的查询字符串，即问号之后的部分。")]),v._v(" "),e("p",[v._v("​        "),e("code",[v._v("URLSearchParams")]),v._v("还可以与"),e("code",[v._v("URL")]),v._v("接口结合使用。"),e("code",[v._v("var url = new URL(location);``url.searchParams就是URLSearchParams {}对象。")])]),v._v(" "),e("p",[v._v("​    4、每个Cookie的大小一般不能超过4KB。")]),v._v(" "),e("p",[v._v("​        Cookie保存以下几方面的信息：Cookie的名字，Cookie的值，到期时间，所属域名（默认是当前域名），生效的路径（默认是当前网址）。")]),v._v(" "),e("p",[v._v("​        "),e("code",[v._v("window.navigator.cookieEnabled")]),v._v("属性返回一个布尔值，表示浏览器是否打开Cookie功能。"),e("code",[v._v("document.cookie")]),v._v("属性返回当前网页的Cookie。")]),v._v(" "),e("p",[v._v("​        两个网址只要域名相同和端口相同，就可以共享Cookie。")]),v._v(" "),e("p",[v._v("​    5、sessionStorage和localStorage。")]),v._v(" "),e("p",[v._v("​        JSONP：网页通过添加一个"),e("code",[v._v("<script>")]),v._v("元素，向服务器请求JSON数据，这种做法不受同源政策限制；服务器收到请求后，将数据放在一个指定名字的回调函数里传回来。")]),v._v(" "),e("p",[v._v("​        WebSocket是一种通信协议，使用"),e("code",[v._v("ws://")]),v._v("（非加密）和"),e("code",[v._v("wss://")]),v._v("（加密）作为协议前缀。")]),v._v(" "),e("p",[v._v("​    6、浏览器将CORS请求分成两类：简单请求（simple request）和非简单请求（not-so-simple request）。")]),v._v(" "),e("p",[v._v("​        JSONP只支持"),e("code",[v._v("GET")]),v._v("请求，CORS支持所有类型的HTTP请求。")]),v._v(" "),e("p",[v._v("​    7、Notification API是浏览器的通知接口，用于在用户的桌面（而不是网页上）显示通知信息。")]),v._v(" "),e("p",[v._v("​    8、Performance API用于精确度量、控制、增强浏览器的性能表现。")]),v._v(" "),e("p",[v._v("七、语法专题：")]),v._v(" "),e("p",[v._v("​    1、JavaScript引擎有多个线程，单个脚本只能在一个线程上运行，其他线程都是在后台配合。")]),v._v(" "),e("p",[v._v("​        为了利用多核CPU的计算能力，HTML5提出Web Worker标准，允许JavaScript脚本创建多个线程，但是子线程完全受主线程控制，且不得操作DOM。")]),v._v(" "),e("p",[v._v("​        所谓Event Loop机制，指的是一种内部循环，用来一轮又一轮地处理消息队列之中的消息，即执行对应的回调函数。（异步模式）")]),v._v(" "),e("p",[v._v("​        所有任务分为同步任务和异步任务。")]),v._v(" "),e("p",[v._v("​    2、如果被"),e("code",[v._v("setTimeout")]),v._v("推迟执行的回调函数是某个对象的方法，那么该方法中的"),e("code",[v._v("this")]),v._v("关键字将指向全局环境。")]),v._v(" "),e("p",[v._v("​        setIntervel具有累积效应。")]),v._v(" "),e("p",[v._v("​    3、Promise是JavaScript异步操作解决方案。")]),v._v(" "),e("p",[v._v("​    4、严格模式")]),v._v(" "),e("p",[v._v("以上笔记总结自—— http://javascript.ruanyifeng.com/")])])}),[],!1,null,null,null);_.default=o.exports}}]);